package com.redsea.model;

import java.util.List;

import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Record;
import com.jfinal.plugin.ehcache.CacheKit;
import com.jfinal.plugin.ehcache.IDataLoader;
import com.redsea.common.Consts;
import com.redsea.model.base.BaseArticleTags;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class ArticleTags extends BaseArticleTags<ArticleTags> {
	public static final ArticleTags dao = new ArticleTags();
	
	public List<ArticleTags> findByCache(final Integer articleId) {
		return CacheKit.get(Consts.CacheName.halfHour.get(), "article_tags_"+String.valueOf(articleId), new IDataLoader() {
			public List<ArticleTags> load() {
				return findByArticleId(articleId);
			}
		});
	}
		// 根据articleId查询
		public List<ArticleTags> findByArticleId(Integer articleId) {
			String sql = "SELECT t.id, t.tag_name FROM tbl_article_tags t where article_id= ? ";
			return this.find(sql, articleId);
		}
		public List getArticleAllTags(String articleId){
			String sql="SELECT t1.*,t2.tag_name,t2.id as tagId from tbl_article_tags t1 INNER JOIN tbl_tags t2 on  t1.tag_id=t2.id where t1.article_id= ? ";
			return Db.find(sql,articleId); 
		}
		
		public List getArticleTags(final String articleId){
			return CacheKit.get(Consts.CacheName.halfHour.get(), "article_tags_"+String.valueOf(articleId), new IDataLoader() {
				public List<Record> load() {
					String sql="SELECT t1.*,t2.tag_name,t2.id as tagId from tbl_article_tags t1 INNER JOIN tbl_tags t2 on  t1.tag_id=t2.id where t1.article_id= ? limit 3";
					return Db.find(sql,articleId); 
				}
			});
		}
}
