package com.redsea.model;

import com.jfinal.plugin.activerecord.Db;
import com.redsea.model.base.BaseComment;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Comment extends BaseComment<Comment> {
	public static final Comment dao = new Comment();
	
	public Long getMaxLogId() {
		String sql = "SELECT MAX(log_id) max_log_id FROM tbl_comment;";
		Long maxLogId = Db.findFirst(sql).getLong("max_log_id");
		return maxLogId == null ? 0 : maxLogId;
	}
	
	/**
	 * 批量删除多个评论
	 * @param postIds
	 * @return
	 */
	public static int batchDeleteComment(Long[] postIds,Long logId){
		String sql = "DELETE FROM tbl_comment WHERE tbl_comment.post_id=?;";
		Object[][] batchArgs = new Object[postIds.length][2];
		for (int i = 0; i < batchArgs.length; i++) {
			batchArgs[i] = postIds;
		}
		int[] reses = Db.batch(sql, new Object[][]{postIds}, postIds.length);
		int res = 0;
		for (int i = 0; i < reses.length; i++) {
			res += reses[i];
		}
		Article.batchUpdateCommentCount(postIds, -1);
		return res;
	}
	
	/**
	 * 批量更新评论状态
	 * @param postIds ：要被更新的多个评论的主键postId
	 * @param status ：新的状态
	 * @return
	 */
	public static int batchUpdateComment(Long[] postIds,String status,Long logId){
		String sql = "UPDATE tbl_comment SET tbl_comment.`status`=?,tbl_comment.log_id=? WHERE tbl_comment.post_id=?;";
		Object[][] batchArgs = new Object[postIds.length][3];
		for (int i = 0; i < batchArgs.length; i++) {
			batchArgs[i][0] = status;		
			batchArgs[i][1] = logId;
			batchArgs[i][2] = postIds[i];
		}
		int[] reses = Db.batch(sql, batchArgs, postIds.length);
		int addCount = 0;
		if("approved".equals(status))
			addCount = 1;
		else {
			addCount = -1;
		}
		Article.batchUpdateCommentCount(postIds, addCount);
		int res = 0;
		for (int i = 0; i < reses.length; i++) {
			res += reses[i];
		}
		return res;
	}
	
}
